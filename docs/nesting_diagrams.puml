@startuml nesting_flow
!theme plain
title Flusso Completo Sistema Nesting CarbonPilot

actor Operatore as op
participant "Frontend\n(Next.js)" as fe
participant "API Router\n(/batch_nesting)" as api
participant "NestingService\n(OR-Tools)" as ns
participant "Database\n(SQLite)" as db

== Fase 1: Caricamento Dati ==
op -> fe: Accede a /dashboard/curing/nesting
fe -> api: GET /data
api -> db: Query ODL "Attesa cura"
api -> db: Query Autoclavi disponibili
db --> api: Dati ODL e Autoclavi
api --> fe: JSON con dati
fe --> op: Interfaccia con selezioni

== Fase 2: Configurazione ==
op -> fe: Seleziona ODL e Autoclavi
op -> fe: Configura parametri nesting
note right: padding_mm, min_distance_mm, priorita_area

== Fase 3: Generazione Nesting ==
op -> fe: Click "Genera Nesting"
fe -> api: POST /genera {odl_ids, autoclave_ids, parametri}
api -> ns: generate_nesting()
ns -> ns: Carica dati ODL e Autoclave
ns -> ns: Verifica compatibilit√† cicli cura
ns -> ns: Esegue algoritmo OR-Tools CP-SAT
note right: Timeout 30s, vincoli 2D, rotazione

alt Nesting Riuscito
    ns --> api: NestingResult con posizioni
    api -> db: Crea BatchNesting
    api -> db: Crea NestingResult
    db --> api: batch_id generato
    api --> fe: {success: true, batch_id}
    fe -> fe: Redirect a /result/{batch_id}
else Nesting Fallito
    ns --> api: NestingResult con errori
    api --> fe: {success: false, message}
    fe --> op: Mostra errore
end

== Fase 4: Visualizzazione Risultati ==
fe -> api: GET /{batch_id}/full
api -> db: Query batch completo
db --> api: Dati batch + configurazione
api --> fe: JSON completo
fe -> fe: Renderizza NestingCanvas (react-konva)
fe --> op: Preview interattivo con statistiche

== Fase 5: Conferma/Gestione ==
alt Conferma Batch
    op -> fe: Click "Conferma"
    fe -> api: PATCH /{batch_id}/conferma
    api -> db: Aggiorna stato = "confermato"
    api -> db: Log audit trail
    db --> api: Conferma aggiornamento
    api --> fe: Batch confermato
    fe --> op: Notifica successo
else Modifica/Elimina
    op -> fe: Modifica o Elimina
    fe -> api: PUT /{batch_id} o DELETE /{batch_id}
    api -> db: Aggiorna o elimina record
    db --> api: Operazione completata
    api --> fe: Conferma operazione
    fe --> op: Aggiorna interfaccia
end

@enduml

@startuml nesting_architecture
!theme plain
title Architettura Sistema Nesting - Layer View

package "Frontend (Next.js)" {
    [Nesting Page\n604 LOC] as page
    [BatchListWithControls\n521 LOC] as list
    [NestingCanvas\n400 LOC] as canvas
    [BatchCRUD\n544 LOC] as crud
    [BatchStatusSwitch\n331 LOC] as status
}

package "API Layer (FastAPI)" {
    [batch_nesting Router\n886 LOC] as router
    [Pydantic Schemas\n144 LOC] as schemas
}

package "Business Logic" {
    [NestingService\n591 LOC] as service
    [RobustNestingService\n530 LOC] as robust
    [OR-Tools CP-SAT\nSolver] as ortools
}

package "Data Layer" {
    [BatchNesting Model\n119 LOC] as batch_model
    [NestingResult Model\n98 LOC] as result_model
    [SQLite Database] as db
}

' Connessioni Frontend
page --> list : "Gestisce lista batch"
page --> canvas : "Mostra preview"
list --> crud : "Operazioni CRUD"
list --> status : "Cambio stato"

' Connessioni API
page --> router : "HTTP/JSON"
list --> router : "REST API"
crud --> router : "CRUD operations"
status --> router : "State changes"

' Connessioni Business Logic
router --> service : "Genera nesting"
router --> robust : "Fallback robusto"
service --> ortools : "Algoritmo ottimizzazione"

' Connessioni Data
router --> schemas : "Validazione dati"
service --> batch_model : "Crea batch"
service --> result_model : "Salva risultati"
batch_model --> db : "SQLAlchemy ORM"
result_model --> db : "SQLAlchemy ORM"

note top of ortools : "Google OR-Tools\nCP-SAT Solver\nTimeout: 30s\nComplessit√†: O(n¬≤√óm)"

note bottom of db : "Tabelle principali:\n- batch_nesting\n- nesting_results\n- autoclavi, odl, tools"

@enduml

@startuml nesting_algorithm
!theme plain
title Algoritmo OR-Tools - Flusso Dettagliato

start

:Ricevi richiesta nesting\n{odl_ids, autoclave_id, parametri};

:Carica dati ODL dal database\n(tool dimensions, weight, ciclo_cura);

:Carica dati Autoclave\n(piano dimensions, max_weight);

:Verifica compatibilit√† cicli di cura;

if (Cicli compatibili?) then (no)
    :Escludi ODL incompatibili;
endif

:Pre-filtraggio ODL per dimensioni;
note right: Esclude tool troppo grandi\nper il piano autoclave

if (ODL validi rimasti?) then (no)
    :Ritorna errore\n"Nessun ODL posizionabile";
    stop
endif

:Crea modello CP-SAT;

:Definisci variabili per ogni tool i:\n- position[i] = (x, y)\n- included[i] = BoolVar\n- rotated[i] = BoolVar;

:Aggiungi vincoli:\n1. Non sovrapposizione 2D\n2. Limiti piano autoclave\n3. Peso massimo\n4. Rotazione condizionale;

if (Priorit√† area?) then (s√¨)
    :Obiettivo = Massimizza\n(ODL_count √ó 10000 + area_used);
else (no)
    :Obiettivo = Massimizza ODL_count;
endif

:Avvia solver CP-SAT\n(timeout 30s);

if (Soluzione trovata?) then (s√¨)
    :Estrai posizioni tool;
    :Calcola statistiche\n(efficienza, peso totale);
    :Crea BatchNesting nel DB;
    :Ritorna successo + batch_id;
else (no)
    if (Timeout?) then (s√¨)
        :Ritorna parziale\n"Timeout raggiunto";
    else (no)
        :Ritorna errore\n"Nessuna soluzione";
    endif
endif

stop

note right of "Avvia solver CP-SAT" : "Complessit√†: O(n¬≤√óm)\nn = numero tool\nm = dimensioni piano\n\nVincoli implementati:\n- AddNoOverlap2D()\n- Peso ‚â§ max_weight\n- Posizioni ‚â§ piano_size"

@enduml

@startuml nesting_problems
!theme plain
title Problemi Identificati - Priorit√† e Impatto

!define CRITICAL #FF6B6B
!define MEDIUM #FFE66D
!define MINOR #4ECDC4

package "üî¥ PROBLEMI CRITICI" CRITICAL {
    [P1: OR-Tools Timeout\n>20 tool = 30% successo] as p1
    [P2: Canvas Non Interattivo\n0% drag & drop] as p2
    [P3: Error Handling\n30% errori chiari] as p3
}

package "üü† PROBLEMI MEDI" MEDIUM {
    [P4: Batch Status Mismatch\nDB ‚â† UI sync] as p4
    [P5: Config Hardcoded\nDifficile personalizzazione] as p5
}

package "üü¢ PROBLEMI MINORI" MINOR {
    [P6: Performance Frontend\nComponenti >500 LOC] as p6
    [P7: Logging Insufficiente\nDebugging difficile] as p7
}

' Relazioni e impatti
p1 --> [Utenti frustrati\nPerdita efficienza] : "Impatto Alto"
p2 --> [UX limitata\nNessuna ottimizzazione manuale] : "Impatto Alto"
p3 --> [Supporto sovraccarico\nDebugging difficile] : "Impatto Alto"

p4 --> [Confusione operatori\nErrori produzione] : "Impatto Medio"
p5 --> [Deploy complessi\nManutenzione difficile] : "Impatto Medio"

p6 --> [Rendering lento\nEsperienza degradata] : "Impatto Basso"
p7 --> [Debugging lento\nMonitoraggio limitato] : "Impatto Basso"

note bottom : "Raccomandazione: Concentrarsi su P1 e P2\nper massimizzare impatto utente"

@enduml

@startuml nesting_refactor_roadmap
!theme plain
title Roadmap Refactor - Timeline e Priorit√†

!define WEEK1 #E8F5E8
!define WEEK2 #D4F1D4
!define WEEK3 #C0EDC0
!define WEEK4 #ACEAAC

gantt
    title Nesting System Refactor Roadmap
    dateFormat  YYYY-MM-DD
    section ü•á Priorit√† #1: OR-Tools Robusto
    Timeout dinamico           :done, p1a, 2024-12-20, 3d
    Algoritmo greedy fallback  :active, p1b, 2024-12-23, 5d
    Pre-processing intelligente:p1c, after p1b, 4d
    Metriche performance       :p1d, after p1c, 3d
    Test automatici           :p1e, after p1d, 3d
    
    section ü•à Priorit√† #2: Canvas Interattivo
    Drag handlers react-konva  :p2a, 2024-12-23, 4d
    Validazione real-time      :p2b, after p2a, 3d
    Snap-to-grid              :p2c, after p2b, 2d
    Undo/redo system          :p2d, after p2c, 4d
    Export configurazione     :p2e, after p2d, 2d
    
    section ü•â Priorit√† #3: Error Handling
    Messaggi errore specifici  :p3a, 2025-01-06, 3d
    Retry automatico          :p3b, after p3a, 2d
    Logging strutturato       :p3c, after p3b, 3d
    Health check endpoint     :p3d, after p3c, 2d
    
    section üèÖ Priorit√† #4: Real-time Updates
    WebSocket server          :p4a, 2025-01-13, 5d
    Aggiornamenti stato       :p4b, after p4a, 3d
    Gestione conflitti        :p4c, after p4b, 4d
    
    section üéñÔ∏è Priorit√† #5: Performance
    Spezzare componenti grandi :p5a, 2025-01-20, 3d
    Lazy loading              :p5b, after p5a, 2d
    Memoization               :p5c, after p5b, 2d
    Bundle optimization       :p5d, after p5c, 2d
@enduml 