"""Add initial models

Revision ID: 1945_initial_models
Revises: 
Create Date: 2025-05-19 19:45:15.358420

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import enum

# revision identifiers, used by Alembic.
revision = '1945_initial_models'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Primo creiamo l'enum per lo stato delle autoclavi
    stato_autoclave = postgresql.ENUM('disponibile', 'in_uso', 'manutenzione', 'guasto', 'spenta', name='statoautoclave')
    stato_autoclave.create(op.get_bind())
    
    # Tabella cataloghi
    op.create_table('cataloghi',
        sa.Column('part_number', sa.String(length=50), nullable=False),
        sa.Column('descrizione', sa.Text(), nullable=False),
        sa.Column('categoria', sa.String(length=100), nullable=True),
        sa.Column('attivo', sa.Boolean(), nullable=False),
        sa.Column('note', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('part_number')
    )
    op.create_index(op.f('ix_cataloghi_part_number'), 'cataloghi', ['part_number'], unique=False)
    
    # Tabella cicli_cura
    op.create_table('cicli_cura',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('nome', sa.String(length=100), nullable=False),
        sa.Column('temperatura_max', sa.Float(), nullable=False),
        sa.Column('pressione_max', sa.Float(), nullable=False),
        sa.Column('tempo_totale', sa.Integer(), nullable=False),
        sa.Column('stasi1_attiva', sa.Boolean(), nullable=False),
        sa.Column('stasi1_temperatura', sa.Float(), nullable=True),
        sa.Column('stasi1_pressione', sa.Float(), nullable=True),
        sa.Column('stasi1_durata', sa.Integer(), nullable=True),
        sa.Column('stasi2_attiva', sa.Boolean(), nullable=False),
        sa.Column('stasi2_temperatura', sa.Float(), nullable=True),
        sa.Column('stasi2_pressione', sa.Float(), nullable=True),
        sa.Column('stasi2_durata', sa.Integer(), nullable=True),
        sa.Column('descrizione', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('nome')
    )
    op.create_index(op.f('ix_cicli_cura_id'), 'cicli_cura', ['id'], unique=False)
    
    # Tabella tools
    op.create_table('tools',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('codice', sa.String(length=50), nullable=False),
        sa.Column('descrizione', sa.Text(), nullable=True),
        sa.Column('lunghezza', sa.Float(), nullable=False),
        sa.Column('larghezza', sa.Float(), nullable=False),
        sa.Column('altezza', sa.Float(), nullable=False),
        sa.Column('disponibile', sa.Boolean(), nullable=False),
        sa.Column('in_manutenzione', sa.Boolean(), nullable=False),
        sa.Column('data_ultima_manutenzione', sa.DateTime(), nullable=True),
        sa.Column('cicli_completati', sa.Integer(), nullable=False),
        sa.Column('max_temperatura', sa.Float(), nullable=True),
        sa.Column('max_pressione', sa.Float(), nullable=True),
        sa.Column('note', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('codice')
    )
    op.create_index(op.f('ix_tools_id'), 'tools', ['id'], unique=False)
    
    # Tabella autoclavi
    op.create_table('autoclavi',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('nome', sa.String(length=100), nullable=False),
        sa.Column('codice', sa.String(length=50), nullable=False),
        sa.Column('diametro', sa.Float(), nullable=False),
        sa.Column('lunghezza', sa.Float(), nullable=False),
        sa.Column('num_linee_vuoto', sa.Integer(), nullable=False),
        sa.Column('temperatura_max', sa.Float(), nullable=False),
        sa.Column('pressione_max', sa.Float(), nullable=False),
        sa.Column('stato', sa.Enum('disponibile', 'in_uso', 'manutenzione', 'guasto', 'spenta', name='statoautoclave'), nullable=False),
        sa.Column('in_manutenzione', sa.Boolean(), nullable=False),
        sa.Column('produttore', sa.String(length=100), nullable=True),
        sa.Column('anno_produzione', sa.Integer(), nullable=True),
        sa.Column('note', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('codice'),
        sa.UniqueConstraint('nome')
    )
    op.create_index(op.f('ix_autoclavi_id'), 'autoclavi', ['id'], unique=False)
    
    # Tabella parti
    op.create_table('parti',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('part_number', sa.String(length=50), nullable=False),
        sa.Column('descrizione_breve', sa.String(length=255), nullable=False),
        sa.Column('peso', sa.Float(), nullable=True),
        sa.Column('spessore', sa.Float(), nullable=True),
        sa.Column('num_valvole_richieste', sa.Integer(), nullable=False),
        sa.Column('ciclo_cura_id', sa.Integer(), nullable=True),
        sa.Column('note_produzione', sa.Text(), nullable=True),
        sa.Column('cliente', sa.String(length=100), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['ciclo_cura_id'], ['cicli_cura.id'], ),
        sa.ForeignKeyConstraint(['part_number'], ['cataloghi.part_number'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parti_id'), 'parti', ['id'], unique=False)
    op.create_index(op.f('ix_parti_part_number'), 'parti', ['part_number'], unique=False)
    
    # Tabella associativa parti-tools
    op.create_table('parte_tool_association',
        sa.Column('parte_id', sa.Integer(), nullable=False),
        sa.Column('tool_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['parte_id'], ['parti.id'], ),
        sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
        sa.PrimaryKeyConstraint('parte_id', 'tool_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parte_tool_association')
    op.drop_index(op.f('ix_parti_part_number'), table_name='parti')
    op.drop_index(op.f('ix_parti_id'), table_name='parti')
    op.drop_table('parti')
    op.drop_index(op.f('ix_autoclavi_id'), table_name='autoclavi')
    op.drop_table('autoclavi')
    op.drop_index(op.f('ix_tools_id'), table_name='tools')
    op.drop_table('tools')
    op.drop_index(op.f('ix_cicli_cura_id'), table_name='cicli_cura')
    op.drop_table('cicli_cura')
    op.drop_index(op.f('ix_cataloghi_part_number'), table_name='cataloghi')
    op.drop_table('cataloghi')
    
    # Elimina l'enum
    op.execute('DROP TYPE statoautoclave')
    # ### end Alembic commands ### 