"""add nesting_results table

Revision ID: 10151e515f76
Revises: a99248a67c2a4
Create Date: 2025-05-22 18:51:15.130311

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '10151e515f76'
down_revision = 'a99248a67c2a4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nesting_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('autoclave_id', sa.Integer(), nullable=True),
    sa.Column('odl_ids', sa.JSON(), nullable=True),
    sa.Column('area_utilizzata', sa.Float(), nullable=True),
    sa.Column('area_totale', sa.Float(), nullable=True),
    sa.Column('valvole_utilizzate', sa.Integer(), nullable=True),
    sa.Column('valvole_totali', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['autoclave_id'], ['autoclavi.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nesting_results_autoclave_id'), 'nesting_results', ['autoclave_id'], unique=False)
    op.create_index(op.f('ix_nesting_results_id'), 'nesting_results', ['id'], unique=False)
    op.create_table('nesting_result_odl',
    sa.Column('nesting_result_id', sa.Integer(), nullable=False),
    sa.Column('odl_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['nesting_result_id'], ['nesting_results.id'], ),
    sa.ForeignKeyConstraint(['odl_id'], ['odl.id'], ),
    sa.PrimaryKeyConstraint('nesting_result_id', 'odl_id')
    )
    op.alter_column('autoclavi', 'nome',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('autoclavi', 'codice',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('autoclavi', 'lunghezza',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('autoclavi', 'larghezza_piano',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('autoclavi', 'num_linee_vuoto',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('autoclavi', 'temperatura_max',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('autoclavi', 'pressione_max',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('autoclavi', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('autoclavi', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('autoclavi_codice_key', 'autoclavi', type_='unique')
    op.drop_constraint('autoclavi_nome_key', 'autoclavi', type_='unique')
    op.create_index(op.f('ix_autoclavi_codice'), 'autoclavi', ['codice'], unique=True)
    op.create_index(op.f('ix_autoclavi_nome'), 'autoclavi', ['nome'], unique=True)
    op.alter_column('cataloghi', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('cataloghi', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('cicli_cura', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('cicli_cura', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('odl', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('odl', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('parti', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('parti', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('tools', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('tools', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tools', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('tools', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('parti', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('parti', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('odl', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('odl', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('cicli_cura', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('cicli_cura', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('cataloghi', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('cataloghi', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_autoclavi_nome'), table_name='autoclavi')
    op.drop_index(op.f('ix_autoclavi_codice'), table_name='autoclavi')
    op.create_unique_constraint('autoclavi_nome_key', 'autoclavi', ['nome'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint('autoclavi_codice_key', 'autoclavi', ['codice'], postgresql_nulls_not_distinct=False)
    op.alter_column('autoclavi', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('autoclavi', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('autoclavi', 'pressione_max',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('autoclavi', 'temperatura_max',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('autoclavi', 'num_linee_vuoto',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('autoclavi', 'larghezza_piano',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('autoclavi', 'lunghezza',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('autoclavi', 'codice',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('autoclavi', 'nome',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_table('nesting_result_odl')
    op.drop_index(op.f('ix_nesting_results_id'), table_name='nesting_results')
    op.drop_index(op.f('ix_nesting_results_autoclave_id'), table_name='nesting_results')
    op.drop_table('nesting_results')
    # ### end Alembic commands ### 